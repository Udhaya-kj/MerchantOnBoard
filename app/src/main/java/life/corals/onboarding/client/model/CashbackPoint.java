/*
 * Corals app
 * Corals openAPI file
 *
 * OpenAPI spec version: 0.0.10
 * Contact: gp2wins-corals@yahoo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package life.corals.onboarding.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CashbackPoint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-21T12:54:04.779Z")
public class CashbackPoint {
  @SerializedName("cashback_points_id")
  private String cashbackPointsId = null;

  @SerializedName("is_ignore_decimal")
  private Boolean isIgnoreDecimal = null;

  @SerializedName("min_spend")
  private String minSpend = null;

  @SerializedName("payment_cb_percentage")
  private String paymentCbPercentage = null;

  @SerializedName("points_expiry_days")
  private String pointsExpiryDays = null;

  @SerializedName("points_per_curr_unit")
  private String pointsPerCurrUnit = null;

  public CashbackPoint cashbackPointsId(String cashbackPointsId) {
    this.cashbackPointsId = cashbackPointsId;
    return this;
  }

   /**
   * Get cashbackPointsId
   * @return cashbackPointsId
  **/
   @Schema(description = "")
  public String getCashbackPointsId() {
    return cashbackPointsId;
  }

  public void setCashbackPointsId(String cashbackPointsId) {
    this.cashbackPointsId = cashbackPointsId;
  }

  public CashbackPoint isIgnoreDecimal(Boolean isIgnoreDecimal) {
    this.isIgnoreDecimal = isIgnoreDecimal;
    return this;
  }

   /**
   * Get isIgnoreDecimal
   * @return isIgnoreDecimal
  **/
   @Schema(description = "")
  public Boolean isIsIgnoreDecimal() {
    return isIgnoreDecimal;
  }

  public void setIsIgnoreDecimal(Boolean isIgnoreDecimal) {
    this.isIgnoreDecimal = isIgnoreDecimal;
  }

  public CashbackPoint minSpend(String minSpend) {
    this.minSpend = minSpend;
    return this;
  }

   /**
   * Get minSpend
   * @return minSpend
  **/
   @Schema(description = "")
  public String getMinSpend() {
    return minSpend;
  }

  public void setMinSpend(String minSpend) {
    this.minSpend = minSpend;
  }

  public CashbackPoint paymentCbPercentage(String paymentCbPercentage) {
    this.paymentCbPercentage = paymentCbPercentage;
    return this;
  }

   /**
   * Get paymentCbPercentage
   * @return paymentCbPercentage
  **/
   @Schema(description = "")
  public String getPaymentCbPercentage() {
    return paymentCbPercentage;
  }

  public void setPaymentCbPercentage(String paymentCbPercentage) {
    this.paymentCbPercentage = paymentCbPercentage;
  }

  public CashbackPoint pointsExpiryDays(String pointsExpiryDays) {
    this.pointsExpiryDays = pointsExpiryDays;
    return this;
  }

   /**
   * Get pointsExpiryDays
   * @return pointsExpiryDays
  **/
   @Schema(description = "")
  public String getPointsExpiryDays() {
    return pointsExpiryDays;
  }

  public void setPointsExpiryDays(String pointsExpiryDays) {
    this.pointsExpiryDays = pointsExpiryDays;
  }

  public CashbackPoint pointsPerCurrUnit(String pointsPerCurrUnit) {
    this.pointsPerCurrUnit = pointsPerCurrUnit;
    return this;
  }

   /**
   * Get pointsPerCurrUnit
   * @return pointsPerCurrUnit
  **/
   @Schema(description = "")
  public String getPointsPerCurrUnit() {
    return pointsPerCurrUnit;
  }

  public void setPointsPerCurrUnit(String pointsPerCurrUnit) {
    this.pointsPerCurrUnit = pointsPerCurrUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CashbackPoint cashbackPoint = (CashbackPoint) o;
    return Objects.equals(this.cashbackPointsId, cashbackPoint.cashbackPointsId) &&
        Objects.equals(this.isIgnoreDecimal, cashbackPoint.isIgnoreDecimal) &&
        Objects.equals(this.minSpend, cashbackPoint.minSpend) &&
        Objects.equals(this.paymentCbPercentage, cashbackPoint.paymentCbPercentage) &&
        Objects.equals(this.pointsExpiryDays, cashbackPoint.pointsExpiryDays) &&
        Objects.equals(this.pointsPerCurrUnit, cashbackPoint.pointsPerCurrUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cashbackPointsId, isIgnoreDecimal, minSpend, paymentCbPercentage, pointsExpiryDays, pointsPerCurrUnit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CashbackPoint {\n");
    
    sb.append("    cashbackPointsId: ").append(toIndentedString(cashbackPointsId)).append("\n");
    sb.append("    isIgnoreDecimal: ").append(toIndentedString(isIgnoreDecimal)).append("\n");
    sb.append("    minSpend: ").append(toIndentedString(minSpend)).append("\n");
    sb.append("    paymentCbPercentage: ").append(toIndentedString(paymentCbPercentage)).append("\n");
    sb.append("    pointsExpiryDays: ").append(toIndentedString(pointsExpiryDays)).append("\n");
    sb.append("    pointsPerCurrUnit: ").append(toIndentedString(pointsPerCurrUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

